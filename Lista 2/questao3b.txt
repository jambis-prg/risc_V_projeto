addi - 4 ciclos * 2 

# get_num
L0:
    lb - 5 ciclos * 5
    addi - 4 ciclos * 5

    # DIGITO 5 * 10000:
    addi - 4 ciclos * 3 * 2
    slli - 4 ciclos * 2
    jal - 4 ciclos * 2

    # DIGITO 4 * 1000:
    addi - 4 ciclos * 2
    add - 4 ciclos * 2 * 2
    jal - 4 ciclos * 2

    # DIGITO 3 * 100:
    addi - 4 ciclos * 2
    add - 4 ciclos * 2 * 2
    jal - 4 ciclos * 2

    # DIGITO 2 * 10
    addi - 4 ciclos * 2
    add - 4 ciclos * 2 * 2
    jal - 4 ciclos * 2

    # DIGITO 1 * 1
    add - 4 ciclos * 2
    bge - 4 ciclos * 2

    addi - 4 ciclos
    addi - 4 ciclos

    lb - 5 ciclos
    jal - 4 ciclos
--------------------------
Total parcial: 227 ciclos

L1:
    addi - 4 ciclos
    addi - 4 ciclos
    jal - 4 ciclos

    blt - 4 ciclos
    beq - 4 ciclos
    
    lw - 5 ciclos
	addi - 4 ciclos * 3

    # while temp > 0 (Pior Caso: 9 dígitos)
    L2:
        jal - 4 ciclos * 9

        addi - 4 ciclos * 9 * 3

        add - 4 ciclos * 9
        sw - 4 ciclos * 9
        addi - 4 ciclos * 9

        blt - 4 ciclos * 9
        bne - 4 ciclos * 9
----------------------------
Total Parcial: 227 + 289

# Printa os dígitos
L3:
	addi - 4 ciclos

    (Pior Caso: 9 dígitos)
	L4:
		add - 4 ciclos * 9  
		lb - 5 ciclos * 9
		sb - 4 ciclos * 9
    
		addi - 4 ciclos * 9
		bge - 4 ciclos * 9
----------------------------
Total Parcial: 227 + 289 + 193

halt (Não executada)

9 chamadas
Mul:
    addi - 4 ciclos * 9
    addi - 4 ciclos * 9

    (Pior Caso: 32 iterações)
    Mul_Loop:
        and - 4 ciclos * 9 * 32
        beq - 4 ciclos * 9 * 32
        add - 4 ciclos * 9 * 32

    Skip:
        slli - 4 ciclos * 9 * 32
        srli - 4 ciclos * 9 * 32
        bne - 4 ciclos * 9 * 32

    Exit_Loop:
        jalr - 4 ciclos * 9
----------------------------
Total Parcial: 227 + 289 + 193 + 7020

(Pior Caso: 9 chamadas e (2^31-1)/10 iterações)
# No pior caso apenas a primeira chamada teria (2^31-1)/10 iterações
# Mas para facilitar os cálculos, consideramos que todas teriam
Div_By_Ten:
    addi - 4 ciclos * 3 * 9 * (2^31-1)/10

    # while (resto >= divisor)
    blt - 4 ciclos * 9 * (2^31-1)/10
    Div_loop:
        sub - 4 ciclos * 9 * (2^31-1)/10
        addi - 4 ciclos * 9 * (2^31-1)/10
        bge - 4 ciclos * 9 * (2^31-1)/10

    Div_exit:
        jalr - 4 ciclos
----------------------------
Total Parcial: 227 + 289 + 193 + 7020 + 54.116.587.732
Total: 54.116.595.461
